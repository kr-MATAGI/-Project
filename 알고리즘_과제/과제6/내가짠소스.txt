#include <stdio.h>
#include <stdlib.h>
#include <string.h>


FILE *in = fopen("drive.inp", "r");
FILE *out = fopen("drive.out", "w");

int garo[105][105];
int sero[105][105];
int dp[105][105][211][2]; //0은 오른쪽 1은 아래

int min(int a, int b) {
	return (a > b) ? b : a;
}

int main()
{
	int T;
	int t, i, j, k;
	int M, N, L, G;
	int result;
	int rotate;
	fscanf(in, "%d", &T);

	for (t = 0; t < T; t++) {

		fscanf(in, "%d %d %d %d", &M, &N, &L, &G);

		rotate = M + N;

		//가로 입력
		for (i = 1; i <= M; i++) {
			for (j = 1; j <= N - 1; j++) {
				fscanf(in, "%d", &garo[i][j]);
			}
		}

		//세로 입력
		for (i = 1; i <= M - 1; i++) {
			for (j = 1; j <= N; j++) {
				fscanf(in, "%d", &sero[i][j]);
			}
		}

		memset(dp, 102, sizeof(dp));
		for (k = 0; k <= rotate; k++) {
			dp[1][1][k][0] = dp[1][1][k][1] = 0;
		}

		for (i = 2; i <= N; i++) {
			dp[1][i][0][0] = dp[1][i - 1][0][0] + garo[1][i - 1];
		}

		for (i = 2; i <= M; i++) {
			dp[i][1][0][1] = dp[i - 1][1][0][1] + sero[i - 1][1];
		}

		for (k = 1; k <= rotate; k++) {
			for (i = 2; i <= M; i++) {
				for (j = 2; j <= N; j++) {
					dp[i][j][k][0] = min(dp[i][j - 1][k - 1][1] + garo[i][j - 1], dp[i][j - 1][k][0] + garo[i][j - 1]);
					dp[i][j][k][1] = min(dp[i - 1][j][k][1] + sero[i - 1][j], dp[i - 1][j][k - 1][0] + sero[i - 1][j]);
				}
			}
		}

		result = -1;
		for (k = 0; k <= rotate; k++) {
			for (i = 0; i < 2; i++) {
				if (dp[M][N][k][i] <= G) {
					if (result == -1 || result >(N + M - 2)*L + k) {
						result = (M + N - 2)*L + k;
					}
				}
			}
		}
		fprintf(out, "%d\n", result);
	}
}